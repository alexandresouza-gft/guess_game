apiVersion: v1
kind: Namespace
metadata:
  name: game-namespace

---

apiVersion: v1
kind: Secret
metadata:
  name: db-credentials
  namespace: game-namespace
type: Opaque
data:
  # Encode com base64: echo -n "gameadmin" | base64
  POSTGRES_USER: Z2FtZWFkbWlu
  # echo -n "secretpassword" | base64
  POSTGRES_PASSWORD: c2VjcmV0cGFzc3dvcmQ=
  # echo -n "gamedb" | base64
  POSTGRES_DB: Z2FtZWRi

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pgdata-pvc
  namespace: game-namespace
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-deployment
  namespace: game-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
        - name: postgres
          image: postgres:15
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: POSTGRES_DB
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: pgdata
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: pgdata
          persistentVolumeClaim:
            claimName: pgdata-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: db-svc
  namespace: game-namespace
spec:
  type: ClusterIP
  selector:
    app: db
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  namespace: game-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: asouzapuc/pucminas:backend
          env:
            - name: FLASK_APP
              value: "run.py"
            - name: FLASK_DB_TYPE
              value: "postgres"
            - name: FLASK_DB_USER
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: POSTGRES_USER
            - name: FLASK_DB_NAME
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: POSTGRES_DB
            - name: FLASK_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: POSTGRES_PASSWORD
            - name: FLASK_DB_HOST
              value: "db-svc"
            - name: FLASK_DB_PORT
              value: "5432"
          ports:
            - containerPort: 5000
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "256Mi"

---

apiVersion: v1
kind: Service
metadata:
  name: backend-svc
  namespace: game-namespace
spec:
  type: ClusterIP
  selector:
    app: backend
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  namespace: game-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: asouzapuc/pucminas:front
          env:
            - name: REACT_APP_BACKEND_URL
              value: "http://backend-svc:5000"
          ports:
            - containerPort: 3000

---

apiVersion: v1
kind: Service
metadata:
  name: frontend-svc
  namespace: game-namespace
spec:
  type: NodePort
  selector:
    app: frontend
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 30080

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: backend-hpa
  namespace: game-namespace
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: backend-deployment
  minReplicas: 1
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50

